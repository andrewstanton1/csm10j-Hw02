1. Comparing my initial diagram to the diagram I constructed after reading the rest of the directions, I found many similiarities and few differences. We learned in class how to identify class names and members and their relationships by finding verbs and nouns in the description of the problem. After reading the problem several times, and highlighting relevant terms, I was able to construct a diagram that was similar to the one outlined later in the assignment. All the classes were the same, albeit, the names were slightly different, such as "vehicles" instead of "car" and many of the members that were present in my initial diagram also appeared in my later inheritance diagram. Despite the similiarites, I found that I failed to include some obvious data memebers that should have further defined my classes. Without these, the wealth manangement structure was incomplete.

2. The main difference between my inheritance design and my interface design were their structures. I found the inheritance design really to be more heirarchical than the interface design. Certainly they both seemed derived in that they received their functions from partner sources. Something that was particularly nice about the interface design was that I didn't have to repeatly declare my data members throughout the project. This could be even more useful the more involved and complicated the program potentially becomes. On the other hand, the interface design didn't require me to cast debt to property, so I didn't have to do any kind of casting. In that sense it was more data independent, which could be beneficial with this sort of program.

3. After downloading the software, and playing around with the plugin that allowed me, eventually, to simply upload my project and transform it to a detailed diagram, it was immediatly clear how good a tool the diagram generator really was. The outline and neatness of the generated diagram was easy to follow and illustrated the programs structure with clear indications and relevant symbols. That is not say I think my artwork was poor, I just think the computer took what I intended to show, and made it nice, as far as appearance goes. As for the actual content, I found the generated diagram to, for the most part, included everything that I had intended to include, add a few extra indictors that showed additional areas that members belonged to. Moreover, the generated program took advantage of a completed program that compiles that does everything it was constructed to do, granted I implemented to designs correctly. So the generated design had far more information that my hand written design that followed the primary design in the assignment; of course I included more inforation as well, but just not to the extent that the software was able to collect. So to answer this question more percisely, no, they were not the same but the computer design was a significatly improved version.

4. Ideally, there should be a way to improve the performance of this program but I couldn't provide any useful or constructive ideas that would do so. Besides the obvious, add more information and make the program more capable and comprehensive in what it can support, I don't have anything to add to its structure or design when limited to its current functions. I think the design is simple and works well with both interface and inheritance methods.


